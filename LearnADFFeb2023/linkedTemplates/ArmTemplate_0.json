{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "LearnADFFeb2023"
		},
		"AzureBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage'"
		},
		"OnPremSQLDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'OnPremSQLDB'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SELFHOSTED-IR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Blob_CopyDataActivity')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Sales_Jan2015.csv",
						"folderPath": "Jan",
						"container": "2023"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Container_BlobFeb2023')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ContainerName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Container_BlobFeb2023_FileNameInfo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DirName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().DirName",
							"type": "Expression"
						},
						"container": "2023"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremSQLDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('OnPremSQLDB_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SELFHOSTED-IR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SELFHOSTED-IR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_OnPremFeb2023Tables')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPremSQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "CleanUpSales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPremSQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get File Information",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Container_BlobFeb2023_FileNameInfo",
								"type": "DatasetReference",
								"parameters": {
									"DirName": {
										"value": "@pipeline().parameters.FolderName",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get File Information",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get File Information').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Data From Blob toSQL DB",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "SqlServerSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"type": "String",
														"ordinal": 1
													},
													"sink": {
														"name": "RowID",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 2
													},
													"sink": {
														"name": "OrderID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 3
													},
													"sink": {
														"name": "OrderDate",
														"type": "DateTime",
														"physicalType": "date"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 4
													},
													"sink": {
														"name": "ShipDate",
														"type": "DateTime",
														"physicalType": "date"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 5
													},
													"sink": {
														"name": "ShipMode",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 6
													},
													"sink": {
														"name": "CustomerID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 7
													},
													"sink": {
														"name": "CustomerName",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 8
													},
													"sink": {
														"name": "Segment",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 9
													},
													"sink": {
														"name": "Country",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 10
													},
													"sink": {
														"name": "City",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 11
													},
													"sink": {
														"name": "State",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 12
													},
													"sink": {
														"name": "Postal Code",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 13
													},
													"sink": {
														"name": "Region",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 14
													},
													"sink": {
														"name": "ProductID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 15
													},
													"sink": {
														"name": "Category",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 16
													},
													"sink": {
														"name": "SubCategory",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 17
													},
													"sink": {
														"name": "ProductName",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 18
													},
													"sink": {
														"name": "Sales",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 12
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 19
													},
													"sink": {
														"name": "Quantity",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 20
													},
													"sink": {
														"name": "Discount",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 12
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 21
													},
													"sink": {
														"name": "Profit",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 12
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 22
													},
													"sink": {
														"name": "LoadType",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 23
													},
													"sink": {
														"name": "TestRowID",
														"type": "Int32",
														"physicalType": "int"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_Blob_CopyDataActivity",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_OnPremFeb2023Tables",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FolderName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Container_BlobFeb2023_FileNameInfo')]",
				"[concat(variables('factoryId'), '/datasets/DS_Blob_CopyDataActivity')]",
				"[concat(variables('factoryId'), '/datasets/DS_OnPremFeb2023Tables')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobToSQLDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Folder Name",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Container_BlobFeb2023",
								"type": "DatasetReference",
								"parameters": {
									"ContainerName": {
										"value": "@pipeline().parameters.ParentContainerName",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Loop Through All Folder Exists in Container",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Folder Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Folder Name').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Calling Data Movement of Blob to SQL DB",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pipeline1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"FolderName": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ParentContainerName": {
						"type": "string",
						"defaultValue": "2023"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-17T05:53:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Container_BlobFeb2023')]",
				"[concat(variables('factoryId'), '/pipelines/pipeline1')]"
			]
		}
	]
}